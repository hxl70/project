#set($className=$table.getClassName())
#set($fieldName=$table.getFieldName())
#set($entityName=${generatorConfig.getByType("entity").getFileName(${className})})
#set($queryName=${generatorConfig.getByType("query").getFileName(${className})})
#set($daoName=${generatorConfig.getByType("dao").getFileName(${className})})
#set($controllerName=${generatorConfig.getByType("controller").getFileName(${className})})
#set($serviceName=${generatorConfig.getByType("service").getFileName(${className})})
#set($serviceImplName=${generatorConfig.getByType("serviceImpl").getFileName(${className})})
#set($entityFieldName=${generatorConfig.getByType("entity").getFileName(${fieldName})})
#set($serviceFieldName=${generatorConfig.getByType("service").getFileName(${fieldName})})
package ${generatorConfig.getByType("controller").getClassPackage()};

import ${generatorConfig.getByType("entity").getFullName(${className})};
import ${generatorConfig.getByType("query").getFullName(${className})};
import ${generatorConfig.getByType("service").getFullName(${className})};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
@RequestMapping("/$entityFieldName")
public class $controllerName {

    @Autowired
    private ${serviceName} ${serviceFieldName};

    @RequestMapping(value = "/list", method = RequestMethod.GET)
    public String list(${queryName} query, ModelMap modelMap) {
        Page<${entityName}> ${entityFieldName}Page = ${serviceFieldName}.page(query);
        modelMap.put("${entityFieldName}Page", ${entityFieldName}Page);
        return "/${entityFieldName}/list";
    }

    @RequestMapping(value = "/create", method = RequestMethod.GET)
    public String create(ModelMap modelMap) {
        modelMap.put("${entityFieldName}", new ${entityName}());
        return "/${entityFieldName}/create";
    }

    @RequestMapping(value = "/save", method = RequestMethod.POST)
    public String save(${entityName} ${entityFieldName}){
        ${serviceFieldName}.save(${entityFieldName});
        return "redirect:/${entityFieldName}/list";
    }

    @RequestMapping(value = "/{id}/edit", method = RequestMethod.GET)
    public String edit(@PathVariable String id, ModelMap modelMap) {
        ${entityName} ${entityFieldName} = ${serviceFieldName}.findById(id);
        modelMap.put("${entityFieldName}", ${entityFieldName});
        return "/${entityFieldName}/edit";
    }

    @RequestMapping(value = "/{id}/update", method = RequestMethod.PUT)
    public String update(@PathVariable("id") String id, ${entityName} ${entityFieldName}) {
        ${serviceFieldName}.update(id, ${entityFieldName});
        return "redirect:/${entityFieldName}/list";
    }

    @RequestMapping(value = "/{id}/delete", method = RequestMethod.DELETE)
    public String delete(@PathVariable("id") String id) {
        ${serviceFieldName}.delete(id);
        return "redirect:/${entityFieldName}/list";
    }

}
