#set($className=$table.getClassName())
#set($fieldName=$table.getFieldName())
#set($name=$table.getName())
#set($entityName=${generatorConfig.getByType("entity").getFileName(${className})})
#set($queryName=${generatorConfig.getByType("query").getFileName(${className})})
#set($daoName=${generatorConfig.getByType("dao").getFileName(${className})})
#set($serviceName=${generatorConfig.getByType("service").getFileName(${className})})
#set($serviceImplName=${generatorConfig.getByType("serviceImpl").getFileName(${className})})
#set($entityFieldName=${generatorConfig.getByType("entity").getFileName(${fieldName})})
#set($daoFieldName=${generatorConfig.getByType("dao").getFileName(${fieldName})})
package ${generatorConfig.getByType("serviceImpl").getClassPackage()};

import ${generatorConfig.getByType("dao").getFullName(${className})};
import ${generatorConfig.getByType("entity").getFullName(${className})};
import ${generatorConfig.getByType("query").getFullName(${className})};
import ${generatorConfig.getByType("service").getFullName(${className})};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class $serviceImplName implements $serviceName {

    @Autowired
    private $daoName $daoFieldName;

    @Override
    public Page<$entityName> page($queryName query) {
        return ${daoFieldName}.findAll(query.getSpecification(), query.getPageable());
    }

    @Override
    public void save($entityName $entityFieldName) {
        ${daoFieldName}.save($entityFieldName);
    }

    @Override
    public void update(String id, ${entityName} $entityFieldName) {
        ${entityName} entity = ${daoFieldName}.findOne(id);
#foreach($column in $table.getColumns())
#if($column.isModified())
#set($columnFieldName=$column.getFieldName())
        entity.$utils.setter($columnFieldName)(${fieldName}.$utils.getter($columnFieldName, $column.getJavaType())());
#end
#end
        ${daoFieldName}.save(entity);
    }

    @Override
    public void delete(String id) {
        ${daoFieldName}.delete(id);
    }

    @Override
    public ${entityName} findById(String id) {
        return ${daoFieldName}.findOne(id);
    }
}
