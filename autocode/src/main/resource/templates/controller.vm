#set($className=$table.getClassName())
#set($fieldName=$table.getFieldName())
package package ${generatorConfig.getFileConfigByName("controller").getPath()};

import ${generatorConfig.getFileConfigByName("entity").getPath()}.${className};
import ${generatorConfig.getFileConfigByName("query").getPath()}.${className}Query;
import ${generatorConfig.getFileConfigByName("service").getPath()}.${className}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
@RequestMapping("/$fieldName")
public class LinkTypeController {

    @Autowired
    private ${className}Service ${fieldName}Service;

    @RequestMapping(value = "/list", method = RequestMethod.GET)
    public String list(${className}Query query, ModelMap modelMap) {
    Page<${className}> ${fieldName}Page = ${fieldName}Service.page(query);
        modelMap.put("${fieldName}Page", ${fieldName}Page);
        return "/${fieldName}/list";
    }

    @RequestMapping(value = "/create", method = RequestMethod.GET)
    public String create(ModelMap modelMap) {
        modelMap.put("${fieldName}", new ${className}());
        return "/${fieldName}/create";
    }

    @RequestMapping(value = "/save", method = RequestMethod.POST)
    public String save(${className} ${fieldName}){
        ${fieldName}Service.save(${fieldName});
        return "redirect:/${fieldName}/list";
    }

    @RequestMapping(value = "/{id}/edit", method = RequestMethod.GET)
    public String edit(@PathVariable String id, ModelMap modelMap) {
        ${className} ${fieldName} = ${fieldName}Service.findById(id);
        modelMap.put("${fieldName}", ${fieldName});
        return "/${fieldName}/edit";
    }

    @RequestMapping(value = "/{id}/update", method = RequestMethod.PUT)
    public String update(@PathVariable("id") String id, ${className} ${fieldName}) {
        ${fieldName}Service.update(entity);
        return "redirect:/${fieldName}/list";
    }

    @RequestMapping(value = "/{id}/delete", method = RequestMethod.DELETE)
    public String delete(@PathVariable("id") String id) {
        ${fieldName}Service.delete(id);
        return "redirect:/${fieldName}/list";
    }

}
